services:

  tg-bot:
    image: "bot"
    stop_signal: SIGINT
    build:
      context: ./bot-service
#      dockerfile: .Dockerfile
    links:
      - pg-database
      - redis-db
    command: >
      sh -c "poetry run python3 -m bot"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  fastapi:
    image: "fastapi-service"
    stop_signal: SIGINT
    build:
      context: ./fastapi-service/src
    links:
      - pg-database
    stdin_open: true
    command: >
      sh -c "poetry run python3 -m main"
    ports:
      - "8010:8010"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  pg-database:
    image: postgres:14
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: "postgres -c max_connections=150
             -c shared_buffers=512MB -c effective_cache_size=1536MB
             -c maintenance_work_mem=128MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB
             -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200
             -c work_mem=3495kB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=2
             -c max_parallel_workers_per_gather=1 -c max_parallel_workers=2 -c max_parallel_maintenance_workers=1"
    env_file:
      - fastapi-service/.env
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "mixan_45@mail.ru"
      PGADMIN_DEFAULT_PASSWORD: "postgres"
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - "5050:80"
    links:
      - pg-database
    restart: unless-stopped


  redis-db:
    image: redis:6.2-alpine
    container_name: "redis-db"
    ports:
      - "6388:6388"
    restart: always
    command: /bin/sh -c "redis-server --port $$REDISPORT --save 20 1 --loglevel warning --requirepass $$REDISPASSWORD"
    env_file:
      - bot-service/.env
    volumes:
      - cache:/data

volumes:
  cache: { }
  pgdata: { }
  pgadmin: { }
